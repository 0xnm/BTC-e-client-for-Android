buildscript {    repositories {        mavenCentral()    }    dependencies {        classpath 'com.android.tools.build:gradle:0.9.+'    }}apply plugin: 'android'dependencies {    compile fileTree(dir: 'libs', include: '*.jar')    compile 'com.android.support:support-v4:19.1.+'    compile 'com.intellij:annotations:+@jar'}android {    compileSdkVersion 19    buildToolsVersion "19.0.3"    compileOptions {        sourceCompatibility JavaVersion.VERSION_1_7        targetCompatibility JavaVersion.VERSION_1_7    }    defaultConfig {        minSdkVersion 14        targetSdkVersion 19    }    signingConfigs {        release    }    buildTypes {        release {            signingConfig signingConfigs.release            runProguard true            proguardFile getDefaultProguardFile('proguard-android.txt')        }    }}def Properties props = new Properties()def propFile = new File('signing.properties')if (propFile.canRead()) {    props.load(new FileInputStream(propFile))    if (props != null && props.containsKey('STORE_FILE') && props.containsKey('STORE_PASSWORD') &&            props.containsKey('KEY_ALIAS') && props.containsKey('KEY_PASSWORD')) {        android.signingConfigs.release.storeFile = file(props['STORE_FILE'])        android.signingConfigs.release.storePassword = props['STORE_PASSWORD']        android.signingConfigs.release.keyAlias = props['KEY_ALIAS']        android.signingConfigs.release.keyPassword = props['KEY_PASSWORD']    } else {        println 'signing.properties found but some entries are missing'        android.buildTypes.release.signingConfig = null    }} else {    println 'signing.properties not found'    android.buildTypes.release.signingConfig = null}